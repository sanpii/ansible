server {
    listen 80;
    server_name cloud.homecomputing.fr;

    location ^~ /.well-known/acme-challenge {
        add_header Content-Type application/jose+json;
        root /tmp/letsencrypt/public_html;
    }

    location / {
        return 301 https://$server_name$request_uri;  # enforce https
    }
}

server {
    listen 443 ssl http2;

    server_name cloud.homecomputing.fr;
    root /home/sanpi/public_html/owncloud/;

    ssl on;
    ssl_certificate /etc/letsencrypt/live/cloud.homecomputing.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cloud.homecomputing.fr/privkey.pem;

    client_max_body_size 10G; # set max upload size
    fastcgi_buffers 64 4K;

    rewrite ^/caldav(.*)$ /remote.php/dav$1 redirect;
    rewrite ^/carddav(.*)$ /remote.php/dav$1 redirect;
    rewrite ^/webdav(.*)$ /remote.php/dav$1 redirect;

    index index.php;
    error_page 403 /core/templates/403.php;
    error_page 404 /core/templates/404.php;

    gzip off;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location ~ ^/(data|config|\.ht|db_structure\.xml|README) {
        deny all;
    }

    location / {
        # The following 2 rules are only needed with webfinger
        rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
        rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json last;

        rewrite ^/.well-known/carddav /remote.php/carddav/ redirect;
        rewrite ^/.well-known/caldav /remote.php/caldav/ redirect;

        rewrite ^(/core/doc/[^\/]+/)$ $1/index.html;

        try_files $uri $uri/ index.php;
    }

    location ~ ^(.+?\.php)(/.*)?$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm/sanpi;
    }

    # Optional: set long EXPIRES header on static assets
    location ~* ^.+\.(jpg|jpeg|gif|bmp|ico|png|css|js|swf)$ {
        expires 30d;
        # Optional: Don't log access to assets
        access_log off;
    }
}
